{
  "version": 3,
  "sources": ["../../vite-plugin-fs/lib/abstraction/index.mjs"],
  "sourcesContent": ["// src/abstraction/index.ts\nimport { activePort } from \"virtual:fs\";\nvar url = `http://localhost:${activePort}`;\nvar textDecoder = new TextDecoder();\nasync function readdir(path, withFileTypes) {\n  const res = await fetch(`${url}/${path}?cmd=readdir${withFileTypes ? \"&withFileTypes=true\" : \"\"}`);\n  if (res.status !== 200) {\n    throw new Error(await res.text());\n  }\n  if (withFileTypes) {\n    return await res.json();\n  }\n  return await res.json();\n}\nasync function readFile(path) {\n  const res = await fetch(`${url}/${path}?cmd=readFile`);\n  if (res.status === 200) {\n    const data = await res.text();\n    return data;\n  }\n  throw new Error(await res.text());\n}\nasync function stat(path) {\n  const res = await fetch(`${url}/${path}?cmd=stat`);\n  if (res.status === 200) {\n    const data = await res.json();\n    return data;\n  }\n  throw new Error(await res.text());\n}\nasync function writeFile(path, data) {\n  await fetch(`${url}/${path}?cmd=writeFile`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"text/plain\" },\n    body: typeof data === \"string\" ? data : textDecoder.decode(data)\n  });\n}\nasync function rm(path, options) {\n  const res = await fetch(`${url}/${path}?cmd=rm${(options == null ? void 0 : options.recursive) ? \"&recursive=true\" : \"\"}${(options == null ? void 0 : options.force) ? \"&force=true\" : \"\"}`, {\n    method: \"DELETE\"\n  });\n  if (res.status === 200) {\n    return;\n  }\n  throw new Error(await res.text());\n}\nvar fs = {\n  readdir,\n  readFile,\n  stat,\n  writeFile,\n  rm\n};\nvar abstraction_default = fs;\nexport {\n  abstraction_default as default\n};\n"],
  "mappings": ";;;AACA,SAAS,kBAAkB;AAC3B,IAAI,MAAM,oBAAoB;AAC9B,IAAI,cAAc,IAAI,YAAY;AAClC,eAAe,QAAQ,MAAM,eAAe;AAC1C,QAAM,MAAM,MAAM,MAAM,GAAG,OAAO,mBAAmB,gBAAgB,wBAAwB,IAAI;AACjG,MAAI,IAAI,WAAW,KAAK;AACtB,UAAM,IAAI,MAAM,MAAM,IAAI,KAAK,CAAC;AAAA,EAClC;AACA,MAAI,eAAe;AACjB,WAAO,MAAM,IAAI,KAAK;AAAA,EACxB;AACA,SAAO,MAAM,IAAI,KAAK;AACxB;AACA,eAAe,SAAS,MAAM;AAC5B,QAAM,MAAM,MAAM,MAAM,GAAG,OAAO,mBAAmB;AACrD,MAAI,IAAI,WAAW,KAAK;AACtB,UAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,MAAM,IAAI,KAAK,CAAC;AAClC;AACA,eAAe,KAAK,MAAM;AACxB,QAAM,MAAM,MAAM,MAAM,GAAG,OAAO,eAAe;AACjD,MAAI,IAAI,WAAW,KAAK;AACtB,UAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,MAAM,IAAI,KAAK,CAAC;AAClC;AACA,eAAe,UAAU,MAAM,MAAM;AACnC,QAAM,MAAM,GAAG,OAAO,sBAAsB;AAAA,IAC1C,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,aAAa;AAAA,IACxC,MAAM,OAAO,SAAS,WAAW,OAAO,YAAY,OAAO,IAAI;AAAA,EACjE,CAAC;AACH;AACA,eAAe,GAAG,MAAM,SAAS;AAC/B,QAAM,MAAM,MAAM,MAAM,GAAG,OAAO,eAAe,WAAW,OAAO,SAAS,QAAQ,aAAa,oBAAoB,MAAM,WAAW,OAAO,SAAS,QAAQ,SAAS,gBAAgB,MAAM;AAAA,IAC3L,QAAQ;AAAA,EACV,CAAC;AACD,MAAI,IAAI,WAAW,KAAK;AACtB;AAAA,EACF;AACA,QAAM,IAAI,MAAM,MAAM,IAAI,KAAK,CAAC;AAClC;AACA,IAAI,KAAK;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,sBAAsB;",
  "names": []
}
